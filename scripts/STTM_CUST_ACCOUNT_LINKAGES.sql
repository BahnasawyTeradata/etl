
  REPLACE VIEW DEVV_STG_FLX.STTM_CUST_ACCOUNT_LINKAGES AS
  LOCK ROW FOR ACCESS
  SELECT
  COALESCE(X.BRANCH_CODE, Y.BRANCH_CODE) AS BRANCH_CODE, COALESCE(X.CUST_AC_NO, Y.CUST_AC_NO) AS CUST_AC_NO, COALESCE(X.CUSTOMER_NO, Y.CUSTOMER_NO) AS CUSTOMER_NO, COALESCE(X.LINKAGE_TYPE, Y.LINKAGE_TYPE) AS LINKAGE_TYPE, COALESCE(X.LINKED_REF_NO, Y.LINKED_REF_NO) AS LINKED_REF_NO,
  X.EFFECTIVE_DATE, X.LINKAGE_BRANCH, X.LINKAGE_PERCENTAGE, X.LINKAGE_SEQ_NO, X.LINKED_CCY, X.SK_CUSTOMER_NO, X.SK_BRANCH_CODE, X.SK_CUST_AC_NO, X.SK_LINKAGE_BRANCH,
  -------NO_CHANGE-----------
  COALESCE(X.ETL_START_DT,Y.ETL_START_DT) AS ETL_START_DT,
  X.ETL_END_DT,
  X.RECORD_DELETED_FLAG,
  X.PROCESS_NAME,
  X.UPDATE_PROCESS_NAME,
  X.EXT_SS_ID,
  X.EXE_PROCESS_ID,
  X.UPDATE_PROCESS_ID,
  COALESCE(X.ETL_START_TS,Y.ETL_START_TS) AS ETL_START_TS,
  X.ETL_END_TS,
  CASE WHEN Y.BRANCH_CODE IS NULL AND Y.CUST_AC_NO IS NULL AND Y.CUSTOMER_NO IS NULL AND Y.LINKAGE_TYPE IS NULL AND Y.LINKED_REF_NO IS NULL THEN 'INS' --- IF MULTIPLE PKs are there then concatenate them with AND
  WHEN X.BRANCH_CODE = Y.BRANCH_CODE AND X.CUST_AC_NO = Y.CUST_AC_NO AND X.CUSTOMER_NO = Y.CUSTOMER_NO AND X.LINKAGE_TYPE = Y.LINKAGE_TYPE AND X.LINKED_REF_NO = Y.LINKED_REF_NO  --- IF MULTIPLE PKs are there then concatenate them with AND
  AND(
  ( (X.EFFECTIVE_DATE IS NULL AND Y.EFFECTIVE_DATE IS NOT NULL) OR (X.EFFECTIVE_DATE IS NOT NULL AND Y.EFFECTIVE_DATE IS NULL) OR (X.EFFECTIVE_DATE <> Y.EFFECTIVE_DATE)) OR (X.LINKAGE_BRANCH IS NULL AND Y.LINKAGE_BRANCH IS NOT NULL) OR (X.LINKAGE_BRANCH IS NOT NULL AND Y.LINKAGE_BRANCH IS NULL) OR (X.LINKAGE_BRANCH <> Y.LINKAGE_BRANCH)) OR (X.LINKAGE_PERCENTAGE IS NULL AND Y.LINKAGE_PERCENTAGE IS NOT NULL) OR (X.LINKAGE_PERCENTAGE IS NOT NULL AND Y.LINKAGE_PERCENTAGE IS NULL) OR (X.LINKAGE_PERCENTAGE <> Y.LINKAGE_PERCENTAGE)) OR (X.LINKAGE_SEQ_NO IS NULL AND Y.LINKAGE_SEQ_NO IS NOT NULL) OR (X.LINKAGE_SEQ_NO IS NOT NULL AND Y.LINKAGE_SEQ_NO IS NULL) OR (X.LINKAGE_SEQ_NO <> Y.LINKAGE_SEQ_NO)) OR (X.LINKED_CCY IS NULL AND Y.LINKED_CCY IS NOT NULL) OR (X.LINKED_CCY IS NOT NULL AND Y.LINKED_CCY IS NULL) OR (X.LINKED_CCY <> Y.LINKED_CCY)) OR (X.SK_CUSTOMER_NO IS NULL AND Y.SK_CUSTOMER_NO IS NOT NULL) OR (X.SK_CUSTOMER_NO IS NOT NULL AND Y.SK_CUSTOMER_NO IS NULL) OR (X.SK_CUSTOMER_NO <> Y.SK_CUSTOMER_NO)) OR (X.SK_BRANCH_CODE IS NULL AND Y.SK_BRANCH_CODE IS NOT NULL) OR (X.SK_BRANCH_CODE IS NOT NULL AND Y.SK_BRANCH_CODE IS NULL) OR (X.SK_BRANCH_CODE <> Y.SK_BRANCH_CODE)) OR (X.SK_CUST_AC_NO IS NULL AND Y.SK_CUST_AC_NO IS NOT NULL) OR (X.SK_CUST_AC_NO IS NOT NULL AND Y.SK_CUST_AC_NO IS NULL) OR (X.SK_CUST_AC_NO <> Y.SK_CUST_AC_NO)) OR (X.SK_LINKAGE_BRANCH IS NULL AND Y.SK_LINKAGE_BRANCH IS NOT NULL) OR (X.SK_LINKAGE_BRANCH IS NOT NULL AND Y.SK_LINKAGE_BRANCH IS NULL) OR (X.SK_LINKAGE_BRANCH <> Y.SK_LINKAGE_BRANCH)) ) THEN 'UPD'
  WHEN X.BRANCH_CODE IS NULL AND X.CUST_AC_NO IS NULL AND X.CUSTOMER_NO IS NULL AND X.LINKAGE_TYPE IS NULL AND X.LINKED_REF_NO IS NULL THEN 'DEL' --- IF MULTIPLE PKs are there then concatenate them with AND
  END AS OPT_FLAG
  FROM DEVT_STG_FLX.STTM_CUST_ACCOUNT_LINKAGES X
  FULL JOIN DEVT_STG_FLX.STTM_CUST_ACCOUNT_LINKAGES_BACKUP Y
  ON X.BRANCH_CODE = Y.BRANCH_CODE AND X.CUST_AC_NO = Y.CUST_AC_NO AND X.CUSTOMER_NO = Y.CUSTOMER_NO AND X.LINKAGE_TYPE = Y.LINKAGE_TYPE AND X.LINKED_REF_NO = Y.LINKED_REF_NO --- IF MULTIPLE PKs are there then concatenate them with AND
  WHERE OPT_FLAG IS NOT NULL;
 