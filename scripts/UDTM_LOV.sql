CREATE OR REPLACE VIEW DEVV_STG_FLX.UDTM_LOV_get_delta AS LOCKING ROW FOR ACCESS
SELECT
  COALESCE(X.FIELD_NAME, Y.FIELD_NAME) AS FIELD_NAME,
  COALESCE(X.LOV, Y.LOV) AS LOV,
  X.BM_LOV_21_ACTIVITY_CBE,
  X.BM_LOV_30_CUSTOMER_TYPE,
  X.BM_LOV_ACTIVITY_4,
  X.BM_LOV_APPROVAL_STATUS,
  X.BM_LOV_CBE_5TH_ACTIVITY,
  X.BM_LOV_CBE_CLASSIFICATION,
  X.BM_LOV_CBE_COMPANY_CODE,
  X.BM_LOV_CBE_COMPANY_TYPE,
  X.BM_LOV_COMMITMENTS,
  X.BM_LOV_CORPORATE_NPL,
  X.BM_LOV_CUSTOMER_OFFER,
  X.BM_LOV_GUARANTEE_TYPE,
  X.BM_LOV_HOLD_CODE,
  X.BM_LOV_MORTGAGE_DEGREE,
  X.BM_LOV_PURPOSE_GRANT,
  X.BM_LOV_SME_CATEGORY,
  X.BM_LOV_SME_CATEGORY,
  X.BM_LOV_SME_CUST_NATIONALITY,
  X.BM_LOV_SME_MAKER_DEPARTMENT,
  X.BM_LOV_WOMEN_OWNERSHIP,
  X.IS_DEFAULT_VALUE,
  X.LOV_DESC,
  COALESCE(X.ETL_START_DT, Y.ETL_START_DT) AS ETL_START_DT, /* -----NO_CHANGE----------- */
  X.ETL_END_DT,
  X.RECORD_DELETED_FLAG,
  X.PROCESS_NAME,
  X.UPDATE_PROCESS_NAME,
  X.EXT_SS_ID,
  X.EXE_PROCESS_ID,
  X.UPDATE_PROCESS_ID,
  COALESCE(X.ETL_START_TS, Y.ETL_START_TS) AS ETL_START_TS,
  X.ETL_END_TS,
  CASE
    WHEN Y.FIELD_NAME IS NULL AND Y.LOV IS NULL
    THEN 'INS' /* - IF MULTIPLE PKs are there then concatenate them with AND */
    WHEN X.FIELD_NAME = Y.FIELD_NAME
    AND X.LOV = Y.LOV /* - IF MULTIPLE PKs are there then concatenate them with AND */
    AND (
      (
        (
          X.BM_LOV_21_ACTIVITY_CBE IS NULL AND NOT Y.BM_LOV_21_ACTIVITY_CBE IS NULL
        )
        OR (
          NOT X.BM_LOV_21_ACTIVITY_CBE IS NULL AND Y.BM_LOV_21_ACTIVITY_CBE IS NULL
        )
        OR (
          X.BM_LOV_21_ACTIVITY_CBE <> Y.BM_LOV_21_ACTIVITY_CBE
        )
      )
      OR (
        (
          X.BM_LOV_30_CUSTOMER_TYPE IS NULL AND NOT Y.BM_LOV_30_CUSTOMER_TYPE IS NULL
        )
        OR (
          NOT X.BM_LOV_30_CUSTOMER_TYPE IS NULL AND Y.BM_LOV_30_CUSTOMER_TYPE IS NULL
        )
        OR (
          X.BM_LOV_30_CUSTOMER_TYPE <> Y.BM_LOV_30_CUSTOMER_TYPE
        )
      )
      OR (
        (
          X.BM_LOV_ACTIVITY_4 IS NULL AND NOT Y.BM_LOV_ACTIVITY_4 IS NULL
        )
        OR (
          NOT X.BM_LOV_ACTIVITY_4 IS NULL AND Y.BM_LOV_ACTIVITY_4 IS NULL
        )
        OR (
          X.BM_LOV_ACTIVITY_4 <> Y.BM_LOV_ACTIVITY_4
        )
      )
      OR (
        (
          X.BM_LOV_APPROVAL_STATUS IS NULL AND NOT Y.BM_LOV_APPROVAL_STATUS IS NULL
        )
        OR (
          NOT X.BM_LOV_APPROVAL_STATUS IS NULL AND Y.BM_LOV_APPROVAL_STATUS IS NULL
        )
        OR (
          X.BM_LOV_APPROVAL_STATUS <> Y.BM_LOV_APPROVAL_STATUS
        )
      )
      OR (
        (
          X.BM_LOV_CBE_5TH_ACTIVITY IS NULL AND NOT Y.BM_LOV_CBE_5TH_ACTIVITY IS NULL
        )
        OR (
          NOT X.BM_LOV_CBE_5TH_ACTIVITY IS NULL AND Y.BM_LOV_CBE_5TH_ACTIVITY IS NULL
        )
        OR (
          X.BM_LOV_CBE_5TH_ACTIVITY <> Y.BM_LOV_CBE_5TH_ACTIVITY
        )
      )
      OR (
        (
          X.BM_LOV_CBE_CLASSIFICATION IS NULL AND NOT Y.BM_LOV_CBE_CLASSIFICATION IS NULL
        )
        OR (
          NOT X.BM_LOV_CBE_CLASSIFICATION IS NULL AND Y.BM_LOV_CBE_CLASSIFICATION IS NULL
        )
        OR (
          X.BM_LOV_CBE_CLASSIFICATION <> Y.BM_LOV_CBE_CLASSIFICATION
        )
      )
      OR (
        (
          X.BM_LOV_CBE_COMPANY_CODE IS NULL AND NOT Y.BM_LOV_CBE_COMPANY_CODE IS NULL
        )
        OR (
          NOT X.BM_LOV_CBE_COMPANY_CODE IS NULL AND Y.BM_LOV_CBE_COMPANY_CODE IS NULL
        )
        OR (
          X.BM_LOV_CBE_COMPANY_CODE <> Y.BM_LOV_CBE_COMPANY_CODE
        )
      )
      OR (
        (
          X.BM_LOV_CBE_COMPANY_TYPE IS NULL AND NOT Y.BM_LOV_CBE_COMPANY_TYPE IS NULL
        )
        OR (
          NOT X.BM_LOV_CBE_COMPANY_TYPE IS NULL AND Y.BM_LOV_CBE_COMPANY_TYPE IS NULL
        )
        OR (
          X.BM_LOV_CBE_COMPANY_TYPE <> Y.BM_LOV_CBE_COMPANY_TYPE
        )
      )
      OR (
        (
          X.BM_LOV_COMMITMENTS IS NULL AND NOT Y.BM_LOV_COMMITMENTS IS NULL
        )
        OR (
          NOT X.BM_LOV_COMMITMENTS IS NULL AND Y.BM_LOV_COMMITMENTS IS NULL
        )
        OR (
          X.BM_LOV_COMMITMENTS <> Y.BM_LOV_COMMITMENTS
        )
      )
      OR (
        (
          X.BM_LOV_CORPORATE_NPL IS NULL AND NOT Y.BM_LOV_CORPORATE_NPL IS NULL
        )
        OR (
          NOT X.BM_LOV_CORPORATE_NPL IS NULL AND Y.BM_LOV_CORPORATE_NPL IS NULL
        )
        OR (
          X.BM_LOV_CORPORATE_NPL <> Y.BM_LOV_CORPORATE_NPL
        )
      )
      OR (
        (
          X.BM_LOV_CUSTOMER_OFFER IS NULL AND NOT Y.BM_LOV_CUSTOMER_OFFER IS NULL
        )
        OR (
          NOT X.BM_LOV_CUSTOMER_OFFER IS NULL AND Y.BM_LOV_CUSTOMER_OFFER IS NULL
        )
        OR (
          X.BM_LOV_CUSTOMER_OFFER <> Y.BM_LOV_CUSTOMER_OFFER
        )
      )
      OR (
        (
          X.BM_LOV_GUARANTEE_TYPE IS NULL AND NOT Y.BM_LOV_GUARANTEE_TYPE IS NULL
        )
        OR (
          NOT X.BM_LOV_GUARANTEE_TYPE IS NULL AND Y.BM_LOV_GUARANTEE_TYPE IS NULL
        )
        OR (
          X.BM_LOV_GUARANTEE_TYPE <> Y.BM_LOV_GUARANTEE_TYPE
        )
      )
      OR (
        (
          X.BM_LOV_HOLD_CODE IS NULL AND NOT Y.BM_LOV_HOLD_CODE IS NULL
        )
        OR (
          NOT X.BM_LOV_HOLD_CODE IS NULL AND Y.BM_LOV_HOLD_CODE IS NULL
        )
        OR (
          X.BM_LOV_HOLD_CODE <> Y.BM_LOV_HOLD_CODE
        )
      )
      OR (
        (
          X.BM_LOV_MORTGAGE_DEGREE IS NULL AND NOT Y.BM_LOV_MORTGAGE_DEGREE IS NULL
        )
        OR (
          NOT X.BM_LOV_MORTGAGE_DEGREE IS NULL AND Y.BM_LOV_MORTGAGE_DEGREE IS NULL
        )
        OR (
          X.BM_LOV_MORTGAGE_DEGREE <> Y.BM_LOV_MORTGAGE_DEGREE
        )
      )
      OR (
        (
          X.BM_LOV_PURPOSE_GRANT IS NULL AND NOT Y.BM_LOV_PURPOSE_GRANT IS NULL
        )
        OR (
          NOT X.BM_LOV_PURPOSE_GRANT IS NULL AND Y.BM_LOV_PURPOSE_GRANT IS NULL
        )
        OR (
          X.BM_LOV_PURPOSE_GRANT <> Y.BM_LOV_PURPOSE_GRANT
        )
      )
      OR (
        (
          X.BM_LOV_SME_CATEGORY IS NULL AND NOT Y.BM_LOV_SME_CATEGORY IS NULL
        )
        OR (
          NOT X.BM_LOV_SME_CATEGORY IS NULL AND Y.BM_LOV_SME_CATEGORY IS NULL
        )
        OR (
          X.BM_LOV_SME_CATEGORY <> Y.BM_LOV_SME_CATEGORY
        )
      )
      OR (
        (
          X.BM_LOV_SME_CATEGORY IS NULL AND NOT Y.BM_LOV_SME_CATEGORY IS NULL
        )
        OR (
          NOT X.BM_LOV_SME_CATEGORY IS NULL AND Y.BM_LOV_SME_CATEGORY IS NULL
        )
        OR (
          X.BM_LOV_SME_CATEGORY <> Y.BM_LOV_SME_CATEGORY
        )
      )
      OR (
        (
          X.BM_LOV_SME_CUST_NATIONALITY IS NULL
          AND NOT Y.BM_LOV_SME_CUST_NATIONALITY IS NULL
        )
        OR (
          NOT X.BM_LOV_SME_CUST_NATIONALITY IS NULL
          AND Y.BM_LOV_SME_CUST_NATIONALITY IS NULL
        )
        OR (
          X.BM_LOV_SME_CUST_NATIONALITY <> Y.BM_LOV_SME_CUST_NATIONALITY
        )
      )
      OR (
        (
          X.BM_LOV_SME_MAKER_DEPARTMENT IS NULL
          AND NOT Y.BM_LOV_SME_MAKER_DEPARTMENT IS NULL
        )
        OR (
          NOT X.BM_LOV_SME_MAKER_DEPARTMENT IS NULL
          AND Y.BM_LOV_SME_MAKER_DEPARTMENT IS NULL
        )
        OR (
          X.BM_LOV_SME_MAKER_DEPARTMENT <> Y.BM_LOV_SME_MAKER_DEPARTMENT
        )
      )
      OR (
        (
          X.BM_LOV_WOMEN_OWNERSHIP IS NULL AND NOT Y.BM_LOV_WOMEN_OWNERSHIP IS NULL
        )
        OR (
          NOT X.BM_LOV_WOMEN_OWNERSHIP IS NULL AND Y.BM_LOV_WOMEN_OWNERSHIP IS NULL
        )
        OR (
          X.BM_LOV_WOMEN_OWNERSHIP <> Y.BM_LOV_WOMEN_OWNERSHIP
        )
      )
      OR (
        (
          X.IS_DEFAULT_VALUE IS NULL AND NOT Y.IS_DEFAULT_VALUE IS NULL
        )
        OR (
          NOT X.IS_DEFAULT_VALUE IS NULL AND Y.IS_DEFAULT_VALUE IS NULL
        )
        OR (
          X.IS_DEFAULT_VALUE <> Y.IS_DEFAULT_VALUE
        )
      )
      OR (
        (
          X.LOV_DESC IS NULL AND NOT Y.LOV_DESC IS NULL
        )
        OR (
          NOT X.LOV_DESC IS NULL AND Y.LOV_DESC IS NULL
        )
        OR (
          X.LOV_DESC <> Y.LOV_DESC
        )
      )
    )
    THEN 'UPD'
    WHEN X.FIELD_NAME IS NULL AND X.LOV IS NULL
    THEN 'DEL' /* - IF MULTIPLE PKs are there then concatenate them with AND */
  END AS OPT_FLAG
FROM DEVT_STG_FLX.UDTM_LOV AS X
FULL JOIN DEVT_STG_FLX.UDTM_LOV_BACKUP AS Y
  ON X.FIELD_NAME = Y.FIELD_NAME
  AND X.LOV = Y.LOV /* - IF MULTIPLE PKs are there then concatenate them with AND */
WHERE
  NOT OPT_FLAG IS NULL