
  REPLACE VIEW DEVV_STG_FLX.SMTB_PRODUCT_TYPES AS
  LOCK ROW FOR ACCESS
  SELECT
  COALESCE(X.FUNCTION_ID, Y.FUNCTION_ID) AS FUNCTION_ID, COALESCE(X.LANGUAGE_CODE, Y.LANGUAGE_CODE) AS LANGUAGE_CODE, COALESCE(X.MODULE, Y.MODULE) AS MODULE, COALESCE(X.PRODUCT_TYPE, Y.PRODUCT_TYPE) AS PRODUCT_TYPE,
  X.BM_PRODUCT_TYPE, X.INT_AUTH_STAT, X.PRODUCT_TYPE_DESC, X.SEQUENCE_NUMBER,
  -------NO_CHANGE-----------
  COALESCE(X.ETL_START_DT,Y.ETL_START_DT) AS ETL_START_DT,
  X.ETL_END_DT,
  X.RECORD_DELETED_FLAG,
  X.PROCESS_NAME,
  X.UPDATE_PROCESS_NAME,
  X.EXT_SS_ID,
  X.EXE_PROCESS_ID,
  X.UPDATE_PROCESS_ID,
  COALESCE(X.ETL_START_TS,Y.ETL_START_TS) AS ETL_START_TS,
  X.ETL_END_TS,
  CASE WHEN Y.FUNCTION_ID IS NULL AND Y.LANGUAGE_CODE IS NULL AND Y.MODULE IS NULL AND Y.PRODUCT_TYPE IS NULL THEN 'INS' --- IF MULTIPLE PKs are there then concatenate them with AND
  WHEN X.FUNCTION_ID = Y.FUNCTION_ID AND X.LANGUAGE_CODE = Y.LANGUAGE_CODE AND X.MODULE = Y.MODULE AND X.PRODUCT_TYPE = Y.PRODUCT_TYPE  --- IF MULTIPLE PKs are there then concatenate them with AND
  AND(
  ( (X.BM_PRODUCT_TYPE IS NULL AND Y.BM_PRODUCT_TYPE IS NOT NULL) OR (X.BM_PRODUCT_TYPE IS NOT NULL AND Y.BM_PRODUCT_TYPE IS NULL) OR (X.BM_PRODUCT_TYPE <> Y.BM_PRODUCT_TYPE)) OR (X.INT_AUTH_STAT IS NULL AND Y.INT_AUTH_STAT IS NOT NULL) OR (X.INT_AUTH_STAT IS NOT NULL AND Y.INT_AUTH_STAT IS NULL) OR (X.INT_AUTH_STAT <> Y.INT_AUTH_STAT)) OR (X.PRODUCT_TYPE_DESC IS NULL AND Y.PRODUCT_TYPE_DESC IS NOT NULL) OR (X.PRODUCT_TYPE_DESC IS NOT NULL AND Y.PRODUCT_TYPE_DESC IS NULL) OR (X.PRODUCT_TYPE_DESC <> Y.PRODUCT_TYPE_DESC)) OR (X.SEQUENCE_NUMBER IS NULL AND Y.SEQUENCE_NUMBER IS NOT NULL) OR (X.SEQUENCE_NUMBER IS NOT NULL AND Y.SEQUENCE_NUMBER IS NULL) OR (X.SEQUENCE_NUMBER <> Y.SEQUENCE_NUMBER)) ) THEN 'UPD'
  WHEN X.FUNCTION_ID IS NULL AND X.LANGUAGE_CODE IS NULL AND X.MODULE IS NULL AND X.PRODUCT_TYPE IS NULL THEN 'DEL' --- IF MULTIPLE PKs are there then concatenate them with AND
  END AS OPT_FLAG
  FROM DEVT_STG_FLX.SMTB_PRODUCT_TYPES X
  FULL JOIN DEVT_STG_FLX.SMTB_PRODUCT_TYPES_BACKUP Y
  ON X.FUNCTION_ID = Y.FUNCTION_ID AND X.LANGUAGE_CODE = Y.LANGUAGE_CODE AND X.MODULE = Y.MODULE AND X.PRODUCT_TYPE = Y.PRODUCT_TYPE --- IF MULTIPLE PKs are there then concatenate them with AND
  WHERE OPT_FLAG IS NOT NULL;
 