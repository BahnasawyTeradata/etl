CREATE OR REPLACE VIEW DEVV_STG_FLX.STTM_ACC_JOINT_HOLDER_get_delta AS LOCKING ROW FOR ACCESS
SELECT
  COALESCE(X.BRANCH_CODE, Y.BRANCH_CODE) AS BRANCH_CODE,
  COALESCE(X.CUST_AC_NO, Y.CUST_AC_NO) AS CUST_AC_NO,
  COALESCE(X.JOINT_HOLDER_CODE, Y.JOINT_HOLDER_CODE) AS JOINT_HOLDER_CODE,
  X.BM_JOINT_HOLDER,
  X.END_DATE,
  X.JOINT_HOLDER,
  X.JOINT_HOLDER_DESCRIPTION,
  X.SK_JOINT_HOLDER_CODE,
  X.SK_BRANCH_CODE,
  X.SK_CUST_AC_NO,
  X.START_DATE,
  COALESCE(X.ETL_START_DT, Y.ETL_START_DT) AS ETL_START_DT, /* -----NO_CHANGE----------- */
  X.ETL_END_DT,
  X.RECORD_DELETED_FLAG,
  X.PROCESS_NAME,
  X.UPDATE_PROCESS_NAME,
  X.EXT_SS_ID,
  X.EXE_PROCESS_ID,
  X.UPDATE_PROCESS_ID,
  COALESCE(X.ETL_START_TS, Y.ETL_START_TS) AS ETL_START_TS,
  X.ETL_END_TS,
  CASE
    WHEN Y.BRANCH_CODE IS NULL AND Y.CUST_AC_NO IS NULL AND Y.JOINT_HOLDER_CODE IS NULL
    THEN 'INS' /* - IF MULTIPLE PKs are there then concatenate them with AND */
    WHEN X.BRANCH_CODE = Y.BRANCH_CODE
    AND X.CUST_AC_NO = Y.CUST_AC_NO
    AND X.JOINT_HOLDER_CODE = Y.JOINT_HOLDER_CODE /* - IF MULTIPLE PKs are there then concatenate them with AND */
    AND (
      (
        (
          X.BM_JOINT_HOLDER IS NULL AND NOT Y.BM_JOINT_HOLDER IS NULL
        )
        OR (
          NOT X.BM_JOINT_HOLDER IS NULL AND Y.BM_JOINT_HOLDER IS NULL
        )
        OR (
          X.BM_JOINT_HOLDER <> Y.BM_JOINT_HOLDER
        )
      )
      OR (
        (
          X.END_DATE IS NULL AND NOT Y.END_DATE IS NULL
        )
        OR (
          NOT X.END_DATE IS NULL AND Y.END_DATE IS NULL
        )
        OR (
          X.END_DATE <> Y.END_DATE
        )
      )
      OR (
        (
          X.JOINT_HOLDER IS NULL AND NOT Y.JOINT_HOLDER IS NULL
        )
        OR (
          NOT X.JOINT_HOLDER IS NULL AND Y.JOINT_HOLDER IS NULL
        )
        OR (
          X.JOINT_HOLDER <> Y.JOINT_HOLDER
        )
      )
      OR (
        (
          X.JOINT_HOLDER_DESCRIPTION IS NULL AND NOT Y.JOINT_HOLDER_DESCRIPTION IS NULL
        )
        OR (
          NOT X.JOINT_HOLDER_DESCRIPTION IS NULL AND Y.JOINT_HOLDER_DESCRIPTION IS NULL
        )
        OR (
          X.JOINT_HOLDER_DESCRIPTION <> Y.JOINT_HOLDER_DESCRIPTION
        )
      )
      OR (
        (
          X.SK_JOINT_HOLDER_CODE IS NULL AND NOT Y.SK_JOINT_HOLDER_CODE IS NULL
        )
        OR (
          NOT X.SK_JOINT_HOLDER_CODE IS NULL AND Y.SK_JOINT_HOLDER_CODE IS NULL
        )
        OR (
          X.SK_JOINT_HOLDER_CODE <> Y.SK_JOINT_HOLDER_CODE
        )
      )
      OR (
        (
          X.SK_BRANCH_CODE IS NULL AND NOT Y.SK_BRANCH_CODE IS NULL
        )
        OR (
          NOT X.SK_BRANCH_CODE IS NULL AND Y.SK_BRANCH_CODE IS NULL
        )
        OR (
          X.SK_BRANCH_CODE <> Y.SK_BRANCH_CODE
        )
      )
      OR (
        (
          X.SK_CUST_AC_NO IS NULL AND NOT Y.SK_CUST_AC_NO IS NULL
        )
        OR (
          NOT X.SK_CUST_AC_NO IS NULL AND Y.SK_CUST_AC_NO IS NULL
        )
        OR (
          X.SK_CUST_AC_NO <> Y.SK_CUST_AC_NO
        )
      )
      OR (
        (
          X.START_DATE IS NULL AND NOT Y.START_DATE IS NULL
        )
        OR (
          NOT X.START_DATE IS NULL AND Y.START_DATE IS NULL
        )
        OR (
          X.START_DATE <> Y.START_DATE
        )
      )
    )
    THEN 'UPD'
    WHEN X.BRANCH_CODE IS NULL AND X.CUST_AC_NO IS NULL AND X.JOINT_HOLDER_CODE IS NULL
    THEN 'DEL' /* - IF MULTIPLE PKs are there then concatenate them with AND */
  END AS OPT_FLAG
FROM DEVT_STG_FLX.STTM_ACC_JOINT_HOLDER AS X
FULL JOIN DEVT_STG_FLX.STTM_ACC_JOINT_HOLDER_BACKUP AS Y
  ON X.BRANCH_CODE = Y.BRANCH_CODE
  AND X.CUST_AC_NO = Y.CUST_AC_NO
  AND X.JOINT_HOLDER_CODE = Y.JOINT_HOLDER_CODE /* - IF MULTIPLE PKs are there then concatenate them with AND */
WHERE
  NOT OPT_FLAG IS NULL