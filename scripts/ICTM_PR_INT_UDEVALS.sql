
  REPLACE VIEW DEVV_STG_FLX.ICTM_PR_INT_UDEVALS AS
  LOCK ROW FOR ACCESS
  SELECT
  COALESCE(X.ACLASS, Y.ACLASS) AS ACLASS, COALESCE(X.BRANCH_CODE, Y.BRANCH_CODE) AS BRANCH_CODE, COALESCE(X.CCY_CODE, Y.CCY_CODE) AS CCY_CODE, COALESCE(X.PRODUCT_CODE, Y.PRODUCT_CODE) AS PRODUCT_CODE, COALESCE(X.UDE_EFF_DT, Y.UDE_EFF_DT) AS UDE_EFF_DT, COALESCE(X.UDE_ID, Y.UDE_ID) AS UDE_ID,
  X.BM_CCY_CODE, X.RATE_CODE, X.SK_ACLASS, X.SK_BRANCH, X.SK_PROD, X.SK_RATE_CODE_CCY_CODE, X.SK_UDE_ID, X.TD_RATE_CODE, X.UDE_VALUE,
  -------NO_CHANGE-----------
  COALESCE(X.ETL_START_DT,Y.ETL_START_DT) AS ETL_START_DT,
  X.ETL_END_DT,
  X.RECORD_DELETED_FLAG,
  X.PROCESS_NAME,
  X.UPDATE_PROCESS_NAME,
  X.EXT_SS_ID,
  X.EXE_PROCESS_ID,
  X.UPDATE_PROCESS_ID,
  COALESCE(X.ETL_START_TS,Y.ETL_START_TS) AS ETL_START_TS,
  X.ETL_END_TS,
  CASE WHEN Y.ACLASS IS NULL AND Y.BRANCH_CODE IS NULL AND Y.CCY_CODE IS NULL AND Y.PRODUCT_CODE IS NULL AND Y.UDE_EFF_DT IS NULL AND Y.UDE_ID IS NULL THEN 'INS' --- IF MULTIPLE PKs are there then concatenate them with AND
  WHEN X.ACLASS = Y.ACLASS AND X.BRANCH_CODE = Y.BRANCH_CODE AND X.CCY_CODE = Y.CCY_CODE AND X.PRODUCT_CODE = Y.PRODUCT_CODE AND X.UDE_EFF_DT = Y.UDE_EFF_DT AND X.UDE_ID = Y.UDE_ID  --- IF MULTIPLE PKs are there then concatenate them with AND
  AND(
  ( (X.BM_CCY_CODE IS NULL AND Y.BM_CCY_CODE IS NOT NULL) OR (X.BM_CCY_CODE IS NOT NULL AND Y.BM_CCY_CODE IS NULL) OR (X.BM_CCY_CODE <> Y.BM_CCY_CODE)) OR (X.RATE_CODE IS NULL AND Y.RATE_CODE IS NOT NULL) OR (X.RATE_CODE IS NOT NULL AND Y.RATE_CODE IS NULL) OR (X.RATE_CODE <> Y.RATE_CODE)) OR (X.SK_ACLASS IS NULL AND Y.SK_ACLASS IS NOT NULL) OR (X.SK_ACLASS IS NOT NULL AND Y.SK_ACLASS IS NULL) OR (X.SK_ACLASS <> Y.SK_ACLASS)) OR (X.SK_BRANCH IS NULL AND Y.SK_BRANCH IS NOT NULL) OR (X.SK_BRANCH IS NOT NULL AND Y.SK_BRANCH IS NULL) OR (X.SK_BRANCH <> Y.SK_BRANCH)) OR (X.SK_PROD IS NULL AND Y.SK_PROD IS NOT NULL) OR (X.SK_PROD IS NOT NULL AND Y.SK_PROD IS NULL) OR (X.SK_PROD <> Y.SK_PROD)) OR (X.SK_RATE_CODE_CCY_CODE IS NULL AND Y.SK_RATE_CODE_CCY_CODE IS NOT NULL) OR (X.SK_RATE_CODE_CCY_CODE IS NOT NULL AND Y.SK_RATE_CODE_CCY_CODE IS NULL) OR (X.SK_RATE_CODE_CCY_CODE <> Y.SK_RATE_CODE_CCY_CODE)) OR (X.SK_UDE_ID IS NULL AND Y.SK_UDE_ID IS NOT NULL) OR (X.SK_UDE_ID IS NOT NULL AND Y.SK_UDE_ID IS NULL) OR (X.SK_UDE_ID <> Y.SK_UDE_ID)) OR (X.TD_RATE_CODE IS NULL AND Y.TD_RATE_CODE IS NOT NULL) OR (X.TD_RATE_CODE IS NOT NULL AND Y.TD_RATE_CODE IS NULL) OR (X.TD_RATE_CODE <> Y.TD_RATE_CODE)) OR (X.UDE_VALUE IS NULL AND Y.UDE_VALUE IS NOT NULL) OR (X.UDE_VALUE IS NOT NULL AND Y.UDE_VALUE IS NULL) OR (X.UDE_VALUE <> Y.UDE_VALUE)) ) THEN 'UPD'
  WHEN X.ACLASS IS NULL AND X.BRANCH_CODE IS NULL AND X.CCY_CODE IS NULL AND X.PRODUCT_CODE IS NULL AND X.UDE_EFF_DT IS NULL AND X.UDE_ID IS NULL THEN 'DEL' --- IF MULTIPLE PKs are there then concatenate them with AND
  END AS OPT_FLAG
  FROM DEVT_STG_FLX.ICTM_PR_INT_UDEVALS X
  FULL JOIN DEVT_STG_FLX.ICTM_PR_INT_UDEVALS_BACKUP Y
  ON X.ACLASS = Y.ACLASS AND X.BRANCH_CODE = Y.BRANCH_CODE AND X.CCY_CODE = Y.CCY_CODE AND X.PRODUCT_CODE = Y.PRODUCT_CODE AND X.UDE_EFF_DT = Y.UDE_EFF_DT AND X.UDE_ID = Y.UDE_ID --- IF MULTIPLE PKs are there then concatenate them with AND
  WHERE OPT_FLAG IS NOT NULL;
 