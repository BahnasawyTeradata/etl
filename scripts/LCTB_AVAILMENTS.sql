CREATE OR REPLACE VIEW DEVV_STG_FLX.LCTB_AVAILMENTS_get_delta AS LOCKING ROW FOR ACCESS
SELECT
  COALESCE(X.CONTRACT_REF_NO, Y.CONTRACT_REF_NO) AS CONTRACT_REF_NO,
  COALESCE(X.EVENT_SEQ_NO, Y.EVENT_SEQ_NO) AS EVENT_SEQ_NO,
  X.AVAILABLE_CONFIRMED_AMT,
  X.AVAILABLE_UNCONFIRMED_AMT,
  X.AVAILABLE_UNDERTAKING_AMOUNT,
  X.AVAILED_NOTUNDERTAKING_AMOUNT,
  X.AVAILMENT_AMT,
  X.AVAILMENT_TYPE,
  X.BM_AVAILMENT_TYPE,
  X.BM_AVAILMENT_TYPE,
  X.CURRENT_AVAILABILITY,
  X.EVENT_CODE,
  X.LIABILITY_AMT,
  X.OS_LIABILITY,
  X.RELATED_REF_NO,
  X.RELEASED_LIABILITY,
  X.REMARKS,
  X.REVERSAL_EVENT_SEQ_NO,
  X.SK_CONTRACT_REF_NO,
  X.SK_CONTRACT_REF_NO_SEQ_NO,
  X.SK_RELATED_REF_NO,
  X.SUBSYSTEMSTAT,
  X.UNCNFIRM_AVAILED_AMT,
  X.VALUE_DATE,
  X.VERSION_NO,
  COALESCE(X.ETL_START_DT, Y.ETL_START_DT) AS ETL_START_DT, /* -----NO_CHANGE----------- */
  X.ETL_END_DT,
  X.RECORD_DELETED_FLAG,
  X.PROCESS_NAME,
  X.UPDATE_PROCESS_NAME,
  X.EXT_SS_ID,
  X.EXE_PROCESS_ID,
  X.UPDATE_PROCESS_ID,
  COALESCE(X.ETL_START_TS, Y.ETL_START_TS) AS ETL_START_TS,
  X.ETL_END_TS,
  CASE
    WHEN Y.CONTRACT_REF_NO IS NULL AND Y.EVENT_SEQ_NO IS NULL
    THEN 'INS' /* - IF MULTIPLE PKs are there then concatenate them with AND */
    WHEN X.CONTRACT_REF_NO = Y.CONTRACT_REF_NO
    AND X.EVENT_SEQ_NO = Y.EVENT_SEQ_NO /* - IF MULTIPLE PKs are there then concatenate them with AND */
    AND (
      (
        (
          X.AVAILABLE_CONFIRMED_AMT IS NULL AND NOT Y.AVAILABLE_CONFIRMED_AMT IS NULL
        )
        OR (
          NOT X.AVAILABLE_CONFIRMED_AMT IS NULL AND Y.AVAILABLE_CONFIRMED_AMT IS NULL
        )
        OR (
          X.AVAILABLE_CONFIRMED_AMT <> Y.AVAILABLE_CONFIRMED_AMT
        )
      )
      OR (
        (
          X.AVAILABLE_UNCONFIRMED_AMT IS NULL AND NOT Y.AVAILABLE_UNCONFIRMED_AMT IS NULL
        )
        OR (
          NOT X.AVAILABLE_UNCONFIRMED_AMT IS NULL AND Y.AVAILABLE_UNCONFIRMED_AMT IS NULL
        )
        OR (
          X.AVAILABLE_UNCONFIRMED_AMT <> Y.AVAILABLE_UNCONFIRMED_AMT
        )
      )
      OR (
        (
          X.AVAILABLE_UNDERTAKING_AMOUNT IS NULL
          AND NOT Y.AVAILABLE_UNDERTAKING_AMOUNT IS NULL
        )
        OR (
          NOT X.AVAILABLE_UNDERTAKING_AMOUNT IS NULL
          AND Y.AVAILABLE_UNDERTAKING_AMOUNT IS NULL
        )
        OR (
          X.AVAILABLE_UNDERTAKING_AMOUNT <> Y.AVAILABLE_UNDERTAKING_AMOUNT
        )
      )
      OR (
        (
          X.AVAILED_NOTUNDERTAKING_AMOUNT IS NULL
          AND NOT Y.AVAILED_NOTUNDERTAKING_AMOUNT IS NULL
        )
        OR (
          NOT X.AVAILED_NOTUNDERTAKING_AMOUNT IS NULL
          AND Y.AVAILED_NOTUNDERTAKING_AMOUNT IS NULL
        )
        OR (
          X.AVAILED_NOTUNDERTAKING_AMOUNT <> Y.AVAILED_NOTUNDERTAKING_AMOUNT
        )
      )
      OR (
        (
          X.AVAILMENT_AMT IS NULL AND NOT Y.AVAILMENT_AMT IS NULL
        )
        OR (
          NOT X.AVAILMENT_AMT IS NULL AND Y.AVAILMENT_AMT IS NULL
        )
        OR (
          X.AVAILMENT_AMT <> Y.AVAILMENT_AMT
        )
      )
      OR (
        (
          X.AVAILMENT_TYPE IS NULL AND NOT Y.AVAILMENT_TYPE IS NULL
        )
        OR (
          NOT X.AVAILMENT_TYPE IS NULL AND Y.AVAILMENT_TYPE IS NULL
        )
        OR (
          X.AVAILMENT_TYPE <> Y.AVAILMENT_TYPE
        )
      )
      OR (
        (
          X.BM_AVAILMENT_TYPE IS NULL AND NOT Y.BM_AVAILMENT_TYPE IS NULL
        )
        OR (
          NOT X.BM_AVAILMENT_TYPE IS NULL AND Y.BM_AVAILMENT_TYPE IS NULL
        )
        OR (
          X.BM_AVAILMENT_TYPE <> Y.BM_AVAILMENT_TYPE
        )
      )
      OR (
        (
          X.BM_AVAILMENT_TYPE IS NULL AND NOT Y.BM_AVAILMENT_TYPE IS NULL
        )
        OR (
          NOT X.BM_AVAILMENT_TYPE IS NULL AND Y.BM_AVAILMENT_TYPE IS NULL
        )
        OR (
          X.BM_AVAILMENT_TYPE <> Y.BM_AVAILMENT_TYPE
        )
      )
      OR (
        (
          X.CURRENT_AVAILABILITY IS NULL AND NOT Y.CURRENT_AVAILABILITY IS NULL
        )
        OR (
          NOT X.CURRENT_AVAILABILITY IS NULL AND Y.CURRENT_AVAILABILITY IS NULL
        )
        OR (
          X.CURRENT_AVAILABILITY <> Y.CURRENT_AVAILABILITY
        )
      )
      OR (
        (
          X.EVENT_CODE IS NULL AND NOT Y.EVENT_CODE IS NULL
        )
        OR (
          NOT X.EVENT_CODE IS NULL AND Y.EVENT_CODE IS NULL
        )
        OR (
          X.EVENT_CODE <> Y.EVENT_CODE
        )
      )
      OR (
        (
          X.LIABILITY_AMT IS NULL AND NOT Y.LIABILITY_AMT IS NULL
        )
        OR (
          NOT X.LIABILITY_AMT IS NULL AND Y.LIABILITY_AMT IS NULL
        )
        OR (
          X.LIABILITY_AMT <> Y.LIABILITY_AMT
        )
      )
      OR (
        (
          X.OS_LIABILITY IS NULL AND NOT Y.OS_LIABILITY IS NULL
        )
        OR (
          NOT X.OS_LIABILITY IS NULL AND Y.OS_LIABILITY IS NULL
        )
        OR (
          X.OS_LIABILITY <> Y.OS_LIABILITY
        )
      )
      OR (
        (
          X.RELATED_REF_NO IS NULL AND NOT Y.RELATED_REF_NO IS NULL
        )
        OR (
          NOT X.RELATED_REF_NO IS NULL AND Y.RELATED_REF_NO IS NULL
        )
        OR (
          X.RELATED_REF_NO <> Y.RELATED_REF_NO
        )
      )
      OR (
        (
          X.RELEASED_LIABILITY IS NULL AND NOT Y.RELEASED_LIABILITY IS NULL
        )
        OR (
          NOT X.RELEASED_LIABILITY IS NULL AND Y.RELEASED_LIABILITY IS NULL
        )
        OR (
          X.RELEASED_LIABILITY <> Y.RELEASED_LIABILITY
        )
      )
      OR (
        (
          X.REMARKS IS NULL AND NOT Y.REMARKS IS NULL
        )
        OR (
          NOT X.REMARKS IS NULL AND Y.REMARKS IS NULL
        )
        OR (
          X.REMARKS <> Y.REMARKS
        )
      )
      OR (
        (
          X.REVERSAL_EVENT_SEQ_NO IS NULL AND NOT Y.REVERSAL_EVENT_SEQ_NO IS NULL
        )
        OR (
          NOT X.REVERSAL_EVENT_SEQ_NO IS NULL AND Y.REVERSAL_EVENT_SEQ_NO IS NULL
        )
        OR (
          X.REVERSAL_EVENT_SEQ_NO <> Y.REVERSAL_EVENT_SEQ_NO
        )
      )
      OR (
        (
          X.SK_CONTRACT_REF_NO IS NULL AND NOT Y.SK_CONTRACT_REF_NO IS NULL
        )
        OR (
          NOT X.SK_CONTRACT_REF_NO IS NULL AND Y.SK_CONTRACT_REF_NO IS NULL
        )
        OR (
          X.SK_CONTRACT_REF_NO <> Y.SK_CONTRACT_REF_NO
        )
      )
      OR (
        (
          X.SK_CONTRACT_REF_NO_SEQ_NO IS NULL AND NOT Y.SK_CONTRACT_REF_NO_SEQ_NO IS NULL
        )
        OR (
          NOT X.SK_CONTRACT_REF_NO_SEQ_NO IS NULL AND Y.SK_CONTRACT_REF_NO_SEQ_NO IS NULL
        )
        OR (
          X.SK_CONTRACT_REF_NO_SEQ_NO <> Y.SK_CONTRACT_REF_NO_SEQ_NO
        )
      )
      OR (
        (
          X.SK_RELATED_REF_NO IS NULL AND NOT Y.SK_RELATED_REF_NO IS NULL
        )
        OR (
          NOT X.SK_RELATED_REF_NO IS NULL AND Y.SK_RELATED_REF_NO IS NULL
        )
        OR (
          X.SK_RELATED_REF_NO <> Y.SK_RELATED_REF_NO
        )
      )
      OR (
        (
          X.SUBSYSTEMSTAT IS NULL AND NOT Y.SUBSYSTEMSTAT IS NULL
        )
        OR (
          NOT X.SUBSYSTEMSTAT IS NULL AND Y.SUBSYSTEMSTAT IS NULL
        )
        OR (
          X.SUBSYSTEMSTAT <> Y.SUBSYSTEMSTAT
        )
      )
      OR (
        (
          X.UNCNFIRM_AVAILED_AMT IS NULL AND NOT Y.UNCNFIRM_AVAILED_AMT IS NULL
        )
        OR (
          NOT X.UNCNFIRM_AVAILED_AMT IS NULL AND Y.UNCNFIRM_AVAILED_AMT IS NULL
        )
        OR (
          X.UNCNFIRM_AVAILED_AMT <> Y.UNCNFIRM_AVAILED_AMT
        )
      )
      OR (
        (
          X.VALUE_DATE IS NULL AND NOT Y.VALUE_DATE IS NULL
        )
        OR (
          NOT X.VALUE_DATE IS NULL AND Y.VALUE_DATE IS NULL
        )
        OR (
          X.VALUE_DATE <> Y.VALUE_DATE
        )
      )
      OR (
        (
          X.VERSION_NO IS NULL AND NOT Y.VERSION_NO IS NULL
        )
        OR (
          NOT X.VERSION_NO IS NULL AND Y.VERSION_NO IS NULL
        )
        OR (
          X.VERSION_NO <> Y.VERSION_NO
        )
      )
    )
    THEN 'UPD'
    WHEN X.CONTRACT_REF_NO IS NULL AND X.EVENT_SEQ_NO IS NULL
    THEN 'DEL' /* - IF MULTIPLE PKs are there then concatenate them with AND */
  END AS OPT_FLAG
FROM DEVT_STG_FLX.LCTB_AVAILMENTS AS X
FULL JOIN DEVT_STG_FLX.LCTB_AVAILMENTS_BACKUP AS Y
  ON X.CONTRACT_REF_NO = Y.CONTRACT_REF_NO
  AND X.EVENT_SEQ_NO = Y.EVENT_SEQ_NO /* - IF MULTIPLE PKs are there then concatenate them with AND */
WHERE
  NOT OPT_FLAG IS NULL