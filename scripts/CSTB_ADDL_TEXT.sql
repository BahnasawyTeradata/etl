CREATE OR REPLACE VIEW DEVV_STG_FLX.CSTB_ADDL_TEXT_get_delta AS LOCKING ROW FOR ACCESS
SELECT
  COALESCE(X.EVNT_SEQ_NO, Y.EVNT_SEQ_NO) AS EVNT_SEQ_NO,
  COALESCE(X.REFERENCE_NO, Y.REFERENCE_NO) AS REFERENCE_NO,
  X.ADDL_TEXT,
  COALESCE(X.ETL_START_DT, Y.ETL_START_DT) AS ETL_START_DT, /* -----NO_CHANGE----------- */
  X.ETL_END_DT,
  X.RECORD_DELETED_FLAG,
  X.PROCESS_NAME,
  X.UPDATE_PROCESS_NAME,
  X.EXT_SS_ID,
  X.EXE_PROCESS_ID,
  X.UPDATE_PROCESS_ID,
  COALESCE(X.ETL_START_TS, Y.ETL_START_TS) AS ETL_START_TS,
  X.ETL_END_TS,
  CASE
    WHEN Y.EVNT_SEQ_NO IS NULL AND Y.REFERENCE_NO IS NULL
    THEN 'INS' /* - IF MULTIPLE PKs are there then concatenate them with AND */
    WHEN X.EVNT_SEQ_NO = Y.EVNT_SEQ_NO
    AND X.REFERENCE_NO = Y.REFERENCE_NO /* - IF MULTIPLE PKs are there then concatenate them with AND */
    AND (
      (
        (
          X.ADDL_TEXT IS NULL AND NOT Y.ADDL_TEXT IS NULL
        )
        OR (
          NOT X.ADDL_TEXT IS NULL AND Y.ADDL_TEXT IS NULL
        )
        OR (
          X.ADDL_TEXT <> Y.ADDL_TEXT
        )
      )
    )
    THEN 'UPD'
    WHEN X.EVNT_SEQ_NO IS NULL AND X.REFERENCE_NO IS NULL
    THEN 'DEL' /* - IF MULTIPLE PKs are there then concatenate them with AND */
  END AS OPT_FLAG
FROM DEVT_STG_FLX.CSTB_ADDL_TEXT AS X
FULL JOIN DEVT_STG_FLX.CSTB_ADDL_TEXT_BACKUP AS Y
  ON X.EVNT_SEQ_NO = Y.EVNT_SEQ_NO
  AND X.REFERENCE_NO = Y.REFERENCE_NO /* - IF MULTIPLE PKs are there then concatenate them with AND */
WHERE
  NOT OPT_FLAG IS NULL