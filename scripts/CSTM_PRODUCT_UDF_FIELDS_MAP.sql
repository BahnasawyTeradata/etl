CREATE OR REPLACE VIEW DEVV_STG_FLX.CSTM_PRODUCT_UDF_FIELDS_MAP_get_delta AS LOCKING ROW FOR ACCESS
SELECT
  COALESCE(X.PRODUCT_CODE, Y.PRODUCT_CODE) AS PRODUCT_CODE,
  COALESCE(X.FIELD_NAME, Y.FIELD_NAME) AS FIELD_NAME,
  COALESCE(X.FIELD_NUM, Y.FIELD_NUM) AS FIELD_NUM,
  X.AUTH_STAT,
  COALESCE(X.ETL_START_DT, Y.ETL_START_DT) AS ETL_START_DT, /* -----NO_CHANGE----------- */
  X.ETL_END_DT,
  X.RECORD_DELETED_FLAG,
  X.PROCESS_NAME,
  X.UPDATE_PROCESS_NAME,
  X.EXT_SS_ID,
  X.EXE_PROCESS_ID,
  X.UPDATE_PROCESS_ID,
  COALESCE(X.ETL_START_TS, Y.ETL_START_TS) AS ETL_START_TS,
  X.ETL_END_TS,
  CASE
    WHEN Y.PRODUCT_CODE IS NULL AND Y.FIELD_NAME IS NULL AND Y.FIELD_NUM IS NULL
    THEN 'INS' /* - IF MULTIPLE PKs are there then concatenate them with AND */
    WHEN X.PRODUCT_CODE = Y.PRODUCT_CODE
    AND X.FIELD_NAME = Y.FIELD_NAME
    AND X.FIELD_NUM = Y.FIELD_NUM /* - IF MULTIPLE PKs are there then concatenate them with AND */
    AND (
      (
        (
          X.AUTH_STAT IS NULL AND NOT Y.AUTH_STAT IS NULL
        )
        OR (
          NOT X.AUTH_STAT IS NULL AND Y.AUTH_STAT IS NULL
        )
        OR (
          X.AUTH_STAT <> Y.AUTH_STAT
        )
      )
    )
    THEN 'UPD'
    WHEN X.PRODUCT_CODE IS NULL AND X.FIELD_NAME IS NULL AND X.FIELD_NUM IS NULL
    THEN 'DEL' /* - IF MULTIPLE PKs are there then concatenate them with AND */
  END AS OPT_FLAG
FROM DEVT_STG_FLX.CSTM_PRODUCT_UDF_FIELDS_MAP AS X
FULL JOIN DEVT_STG_FLX.CSTM_PRODUCT_UDF_FIELDS_MAP_BACKUP AS Y
  ON X.PRODUCT_CODE = Y.PRODUCT_CODE
  AND X.FIELD_NAME = Y.FIELD_NAME
  AND X.FIELD_NUM = Y.FIELD_NUM /* - IF MULTIPLE PKs are there then concatenate them with AND */
WHERE
  NOT OPT_FLAG IS NULL